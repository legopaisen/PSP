@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        var isEdit = true;
        $('#userModal').on('hidden.bs.modal', function () {
            $(this).find('form')[0].reset();
        });
        $.ajax({
            cache: false,
            url: '@Url.Action("GetUsersList", "Users")',
            method: 'GET',
            contentType: 'application/json',
            success: function (data) {
                $("#UsersList").bootstrapTable('load', { data: data });
            },
            error: function (err) {
                console.log(err);
            }
        });
        window.actionEvents = {
            'click .deactivate': function (e, value, row, index) {
                var model = {
                   UserName: row.UserName
                }
                Swal.fire({
                    title: "Deactivate User?",
                    text: "User will be deactivated",
                    icon: "warning",
                    showConfirmButton: true,
                    showCancelButton: true,
                    dangerMode: true
                })
                .then((result) => {
                        if (result.isConfirmed) {
                        $.ajax({
                            cache: false,
                            data: JSON.stringify(model),
                            type: "POST",
                            contentType: "application/json",
                            url: "@Url.Action("ActivateUser", "Users")",
                            datatype: "json",
                            success: function (data) {
                                Swal.fire("Success", data.Description, "success")
                                    .then((value) => {
                                        if (data.ResponseStat == 2) {
                                            window.location = "@Url.Action("Logout", "Login")";
                                        }
                                        else {
                                            location.reload();
                                        }
                                    });
                            },
                            error: function (response) {
                                console.log(response)
                            }
                        });
                    }
                });
            },
            'click .edit': function (e, value, row, index) {
                isEdit = true;
                $('#userModal').modal('show');
                document.getElementById("modal-username").value = row.UserName;
                document.getElementById("modal-name").value = row.Name;
                document.getElementById("modal-email").value = row.Email;
                document.getElementById("modal-username").disabled = true;
                document.getElementById("btnSearch").disabled = true;
                document.getElementById("modal-title").textContent = "Update User";
            }
        }

        $("#btnAddUser").on('click', function () {
            isEdit = false;
            document.getElementById("modal-username").value = "";
            document.getElementById("modal-name").value = "";
            document.getElementById("modal-username").disabled = false;
            document.getElementById("modal-title").textContent = "Add New User";

        });

        var d = new Date();
        var dateToday = d.toISOString();
       //Insert/Update User
        $(".modal-footer #btnSave").on('click', function () {

            var model = {
                UserName: $("#modal-username").val(),
                Name: $("#modal-name").val(),
                AccLevel: $("#modal-accLvl").val(),
                CreatedOn: dateToday,
                Email: $("#modal-email").val()
            };
            if (isEdit == false) { //insert
                if ($("#modal-username").val() != "" && $("#modal-email").val() != "" && $("#modal-name").val() != "") {
                    $.ajax({
                        cache: false,
                        url: "@Url.Action("SearchUser", "Users")",
                        method: "GET",
                        contentType: "application/json",
                        data: {
                            UserName: $("#modal-username").val()
                        },
                        success: function (data) {
                            if (data[0] != undefined) {
                                Swal.fire("Error", "User Already Exists!", "error");
                            }
                            else {
                                Swal.fire({
                                    title: "Add New User",
                                    text: "Create new user?",
                                    icon: "warning",
                                    showConfirmButton: true,
                                    showCancelButton: true,
                                    dangerMode: true,
                                })
                                    .then((result) => {
                                        if (result.isConfirmed) {
                                            $.ajax({
                                                cache: false,
                                                data: JSON.stringify(model),
                                                type: "POST",
                                                contentType: "application/json",
                                                url: "@Url.Action("InsertUser", "Users")",
                                                datatype: "json",
                                                success: function (data) {
                                                    if (data.ResponseStat != 1 && data != null) {
                                                        Swal.fire("Error", data.Description, "error");
                                                    }
                                                    else {
                                                        Swal.fire("Success", data.Description, "success")
                                                            .then((value) => {
                                                                location.reload();
                                                            });
                                                    }
                                                },
                                                error: function (response) {
                                                    console.log(response);
                                                }
                                            });
                                        }
                                    });
                            }
                        },
                        error: function (response) {
                            console.log(response)
                        }
                    });
                }
            }
            else { //update
                var model2 = {
                UserName: $("#modal-username").val(),
                Name: $("#modal-name").val(),
                AccLevel: $("#modal-accLvl").val(),
                ModifiedBy: '@ViewBag.User',
                ModifiedOn: dateToday,
            };
                if ($("#modal-username").val() != "" && $("#modal-name").val() != "") {
                    $.ajax({
                        cache: false,
                        data: JSON.stringify(model2),
                        type: "POST",
                        contentType: "application/json",
                        url: "@Url.Action("EditUser", "Users")",
                        datatype: "json",
                        success: function (data) {
                            Swal.fire("Success", data.Description, "success")
                                .then((value) => {
                                    location.reload();
                                });
                        },
                        error: function (response) {
                            console.log(response)
                        }
                    });
                }
            }
        });

        $('#modal-username').keyup(function () {
            this.value = this.value.toUpperCase();
        });

        /////////////////////////////////////////////
        //login validation
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.formcontainer')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    document.getElementById("btnSave").addEventListener('click', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        $("#btnSearch").on("click", function() {
            var id = $("#modal-username").val();
            $.ajax({
                cache: false,
                url: "@Url.Action("SearchEmployeeID", "Users")",
                data: { sEmployeeID: id },
                dataType:'json',
                method: "GET",
                contentType: "application/json",
                success: function(data) {
                    if (data.Username != null) {
                        $("#modal-name").val(data.FullName);
                        $("#modal-email").val(data.EmailAddress);
                    }
                    else {
                        Swal.fire("Oops!", "Invalid Network ID", "error");
                    }
                },
                error: function(response) {

                }
            });
        });
    });

    function actionFormatter(value, row, index) {
     return [
        '<a class="edit" href="#" title="Edit">',
        '<i class="fa fa-edit"></i>',
        '</a> ',
        '<a class="deactivate" href="javascript:void(0)" id="deactivate" title="Deactivate">',
        '<i class="fa-solid fa-ban"></i>',
        '</a> '
        ].join('');
    };


</script>
<div class="container mt-3 flex-shrink-1">
    <h2>Users</h2>
    <button type="button" id="btnAddUser" class="btn btn-primary fa-add" data-bs-toggle="modal" data-bs-target="#userModal">
        Add User
    </button>
    <table id="UsersList" class="table table-striped"
           data-toggle="table"
           data-classes="table table-hover table-bordered"
           data-row-style="rowStyle"
           data-search="true"
           data-unique-id="UserName"
           data-click-to-select="true"
           data-pagination="true"
           data-page-list="[5, 10, 20]">
        <thead>
            <tr>
                <th data-field="UserName" data-sortable="true">User Name</th>
                <th data-field="Name" data-sortable="true">Name</th>
                <th data-field="Email">Email</th>
                <th data-field="AccLevel" data-sortable="true">Account Level</th>
                <th data-field="CreatedOn">Created On</th>
                <th data-field="ModifiedBy">Modified By</th>
                <th data-field="ModifiedOn">Modified On</th>
                <th data-field="Action" data-formatter="actionFormatter" data-events="actionEvents">Action</th>
            </tr>
        </thead>
    </table>
    <div class="modal fade" id="userModal">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modal-title"></h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form method="post" class="formcontainer form-group" novalidate="" autocomplete="off">
                        <div class="input-group mb-3 mt-3">
                            <label for="username" class="form-label">Network ID:</label>
                            <input type="text" class="form-control mr-2" id="modal-username" placeholder="Enter Network ID" name="UserName" required="" autofocus="" style="width:70%">
                            <div class="input-group-addon">
                                <button type="button" class="btn btn-primary" id="btnSearch"><i class="fa-solid fa-magnifying-glass"></i></button>
                            </div>
                            <div class="invalid-feedback">
                                Network ID is required
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="name" class="form-label">Name:</label>
                            <input type="text" class="form-control" id="modal-name" name="Name" required="" autofocus="" disabled>
                            <div class="invalid-feedback">
                                Name is required
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">E-mail:</label>
                            <input type="email" class="form-control" id="modal-email" name="email" required="" autofocus="" disabled>
                            <div class="invalid-feedback">
                                E-mail is required
                            </div>
                        </div>
                        <label for="acclvl" class="form-label">Account Level:</label>
                        <select class="form-select" id="modal-accLvl">
                            <option value="ADMIN">ADMIN</option>
                            <option value="CHECKER">CHECKER</option>
                        </select>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>
</div>